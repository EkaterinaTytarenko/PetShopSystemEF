<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="UsersDataSet" targetNamespace="http://tempuri.org/UsersDataSet.xsd" xmlns:mstns="http://tempuri.org/UsersDataSet.xsd" xmlns="http://tempuri.org/UsersDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="UsersConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="UsersConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.PetShopSystemEF.Properties.Settings.GlobalReference.Default.UsersConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectName="Users.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([login] = @Original_login) AND ([password] = @Original_password) AND ([email] = @Original_email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([login], [password], [email]) VALUES (@login, @password, @email);
SELECT login, password, email FROM Users WHERE (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT login, password, email FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [login] = @login, [password] = @password, [email] = @email WHERE (([login] = @Original_login) AND ([password] = @Original_password) AND ([email] = @Original_email));
SELECT login, password, email FROM Users WHERE (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectName="Users.dbo.Users" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="SQLFindPasswordByLogin" MethodsParameterType="CLR" Modifier="Public" Name="SQLFindPasswordByLogin" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SQLFindPasswordByLogin">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT password FROM Users
WHERE dbo.Users.login=@login</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQLCountUsersByLogin" MethodsParameterType="CLR" Modifier="Public" Name="SQLCountUsersByLogin" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SQLCountUsersByLogin">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(*) FROM Users
WHERE dbo.Users.login=@login</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertIntoUsers" MethodsParameterType="CLR" Modifier="Public" Name="InsertIntoUsers" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="InsertIntoUsers">
            <InsertCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>INSERT INTO Users (login, password, email) VALUES (@login,@password,@email)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="password" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="email" ColumnName="email" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(35)" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NChar" Scale="0" Size="35" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </InsertCommand>
          </DbSource>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQLCountUsersByEmail" MethodsParameterType="CLR" Modifier="Public" Name="SQLCountUsersByEmail" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="SQLCountUsersByEmail">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(dbo.Users.login) FROM Users
Where dbo.Users.email=@email</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="email" ColumnName="email" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(35)" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NChar" Scale="0" Size="35" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteUser" MethodsParameterType="CLR" Modifier="Public" Name="DeleteUser" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="DeleteUser">
            <DeleteCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>DELETE FROM Users WHERE
dbo.Users.login=@login</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                </Parameters>
              </DbCommand>
            </DeleteCommand>
          </DbSource>
          <DbSource ConnectionRef="UsersConnectionString (Settings)" DbObjectName="Users.dbo.Users" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="SQLFindEmailByLogin" MethodsParameterType="CLR" Modifier="Public" Name="SQLFindEmailByLogin" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="SQLFindEmailByLogin">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>Select email FROM Users 
WHERE dbo.Users.login=@login</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="Users.dbo.Users" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="UsersDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="UsersDataSet" msprop:Generator_UserDSName="UsersDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowClassName="UsersRow" msprop:Generator_UserTableName="Users" msprop:Generator_RowEvArgName="UsersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="login" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_UserColumnName="login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="35" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:login" />
    </xs:unique>
  </xs:element>
</xs:schema>